package com.vladkano.kotlincourse.lesson11

//Задание 1: Создание Пустого Словаря
//Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
//Задание 2: Создание и Инициализация Словаря
//Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
//Задание 3: Создание Изменяемого Словаря
//Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
//Задание 4: Добавление Элементов в Словарь
//Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
//Задание 5: Получение Значений из Словаря
//Используя словарь из предыдущего задания, извлеките значение, используя ключ. Попробуй получить значение с ключом, которого в словаре нет.
//Задание 6: Удаление Элементов из Словаря
//Удалите определенный элемент из изменяемого словаря по его ключу.
//Задание 7: Перебор Словаря в Цикле
//Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение. Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
//Задание 8: Перезапись Элементов Словаря
//Измените значение для существующего ключа в изменяемом словаре.
//Задание 9: Сложение Двух Словарей
//Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
//Задание 10: Словарь с Сложными Типами
//Создайте словарь, где ключами являются строки, а значениями - списки целых чисел. Добавьте несколько элементов в этот словарь.
//Задание 11: Использование Множества в Качестве Значения
//Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк. Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в это множество ещё строку. Распечатай полученное множество.
//Задание 12: Поиск Элемента по Значению
//Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.
//======
//Напиши решения задач. В каждом случае нужно проанализировать и подобрать оптимальный тип словаря.
//Задание 6: Словарь Библиотека
//Ключи - автор книги, значения - список книг
//Задание 12: Справочник Растений
//Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
//Задание 8: Четвертьфинала
//Ключи - названия спортивных команд, значения - списки игроков каждой команды
//Задание 9: Курс лечения
//Ключи - даты, значения - список препаратов принимаемых в дату
//Задание 10: Словарь Путешественника
//Ключи - страны, значения - словари из городов со списком интересных мест.

fun main() {


    val emptyMap: Map<Int, Int> = emptyMap()
    println("Пустой словарь: $emptyMap") //Задание 1: Создание Пустого Словаря

    val initializedMap: Map<Float, Double> = mapOf(1.5f to 2.5, 3.0f to 4.0)
    println("Инициализированный словарь: $initializedMap")  //Задание 2: Создание и Инициализация Словаря

    val mutableMap: MutableMap<Int, String> = mutableMapOf()
    println("Изменяемый словарь: $mutableMap")   //Задание 3: Создание Изменяемого Словаря

    val mutableMap1: MutableMap<Int, String> = mutableMapOf()
    mutableMap1.put(1, "Котлин")
    mutableMap1.put(2, "Java")
    println("Изменяемый словарь после добавления: $mutableMap1") //Задание 4: Добавление Элементов в Словарь

    val value = mutableMap[1]
    println("Значение для ключа 1: $value")
    val nonExistingValue = mutableMap[2]
    println("Значение для отсутствующего ключа 3: $nonExistingValue") //Задание 5: Получение Значений из Словаря

    val value1 = mutableMap1
    mutableMap1.remove(2)
    println("Изменяемый словарь после удаления: $value1") //Задание 6: Удаление Элементов из Словаря

    val divisionMap: Map<Double, Int> = mapOf(1.0 to 2, 2.0 to 4, 3.0 to 6)
    for (entry in divisionMap) {
        val key = entry.key
        val value3 = entry.value
        println("$key / $value3 = ${if (value3 == 0) "бесконечность" else key / value3}") //Задание 7: Перебор Словаря в Цикле
    }

    val value4 = mutableMap
    mutableMap[1] = "Котлин"
    println("Изменяемый словарь после обновления: $value4") //Задание 8: Перезапись Элементов Словаря


    val map1 = mapOf(1 to "A", 2 to "B")
    val map2 = mapOf(3 to "C", 4 to "D")
    val combinedMap = mutableMapOf<Int, String>()
    for (entry in map1) {
        combinedMap[entry.key] = entry.value
    }
    for (entry in map2) {
        combinedMap[entry.key] = entry.value
    }
    println("Суммарный словарь: $combinedMap") //Задание 9: Сложение Двух Словарей


    val listMap: MutableMap<String, List<Int>> = mutableMapOf()
    listMap["Фрукты"] = listOf(1, 2, 3)
    listMap["Овощи"] = listOf(4, 5, 6)
    println("Словарь со списками: $listMap") //Задание 10: Словарь с Сложными Типами


    val setMap: MutableMap<Int, MutableSet<String>> = mutableMapOf()
    setMap[1] = mutableSetOf()
    setMap[1]?.add("Яблоко")
    setMap[1]?.add("Апельсин")
    println("Словарь со множествами: $setMap")
    val set = setMap[1]
    set?.add("Банан")
    println("Множество после добавления: $set") //Задание 11: Использование Множества в Качестве Значения


    val searchMap1: Map<Pair<Int, Int>, String> = mapOf(1 to 2 to "Пара 1-2", 2 to 3 to "Пара 2-3", 3 to 4 to "Пара 3-4", 5 to 6 to "Пара 5-6")
    for (entry in searchMap1) {
        if (entry.key.first == 5 || entry.key.second == 5) {
            println("Найденное значение по ключу с 5: ${searchMap1.values}") //Задание 12: Поиск Элемента по Значению
        }}


        val libraryMap: MutableMap<String, List<String>> = mutableMapOf()
        libraryMap["Стивен Кинг"] = listOf("Сияние", "Оно", "Зеленая миля")
        libraryMap["Джессика Паркер"] = listOf("Поцелуй", "Механик", "Любовь и прочие неприятности")
        println("Библиотека: $libraryMap") //Задание 13: Словарь Библиотека


        val plantsMap: MutableMap<String, List<String>> = mutableMapOf()
        plantsMap["Цветы"] = listOf("Роза", "Тюльпан", "Лилия")
        plantsMap["Деревья"] = listOf("Дуб", "Сосна", "Береза")
        println("Справочник растений: $plantsMap") //Задание 14: Справочник Растений


        val quarterfinalMap: MutableMap<String, List<String>> = mutableMapOf()
        quarterfinalMap["Команда А"] = listOf("Игрок 1", "Игрок 2", "Игрок 3")
        quarterfinalMap["Команда Б"] = listOf("Игрок 4", "Игрок 5", "Игрок 6")
        println("Четвертьфиналы: $quarterfinalMap") //Задание 15: Четвертьфинала


        val treatmentMap: MutableMap<String, List<String>> = mutableMapOf()
        treatmentMap["2023-01-01"] = listOf("Лекарство 1", "Лекарство 2")
        treatmentMap["2023-01-02"] = listOf("Лекарство 3", "Лекарство 4")
        println("Курс лечения: $treatmentMap")  //Задание 16: Курс лечения


        val travelMap: MutableMap<String, MutableMap<String, List<String>>> = mutableMapOf()
        val attractions = listOf("Достопримечательность 1", "Достопримечательность 2", "Достопримечательность 3")
        travelMap["Италия"] = mutableMapOf("Рим" to attractions, "Милан" to attractions, "Флоренция" to attractions)
        println("Словарь путешественника: $travelMap")  //Задание 17: Словарь Путешественника

    }
